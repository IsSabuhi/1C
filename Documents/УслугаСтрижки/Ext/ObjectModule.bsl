
Процедура ОбработкаПроведения(Отказ, Режим)
	//{{__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	 Движения.Продажи.Записывать = Истина;
	 Движения.СтоимостьМатериалов.Записывать = Истина;
	 Движения.ОстаткиМатериалов.Записывать = Истина;
	 Движения.Услуги.Записывать = Истина;
	 Движения.Управленческий.Записывать = Истина;
	 
	 
	 	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	// Создать менеджер временных таблиц
	МенеджерВТ = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос;
	
	// Укажем, какой менеджер временных таблиц использует этот запрос
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	УслугаСтрижкиПереченьНоменклатуры.Номенклатура КАК Номенклатура,
		|	УслугаСтрижкиПереченьНоменклатуры.Номенклатура.ВидНоменклатуры КАК ВидНоменклатуры,
		|	УслугаСтрижкиПереченьУслуг.Номенклатура1 КАК Номенклатура1,
		|	УслугаСтрижкиПереченьУслуг.Номенклатура1.ВидНоменклатуры КАК Номенклатура1ВидНоменклатуры,
		|	УслугаСтрижкиПереченьНоменклатуры.НаборСвойств КАК НаборСвойств,
		|	СУММА(УслугаСтрижкиПереченьНоменклатуры.Количество) КАК КоличествоВДокументе,
		|	СУММА(УслугаСтрижкиПереченьНоменклатуры.Сумма) КАК СуммаВДокументе,
		|	СУММА(УслугаСтрижкиПереченьУслуг.Цена1) КАК Цена1
		|ПОМЕСТИТЬ НоменклатураДокумента
		|ИЗ
		|	Документ.УслугаСтрижки.ПереченьНоменклатуры КАК УслугаСтрижкиПереченьНоменклатуры,
		|	Документ.УслугаСтрижки.ПереченьУслуг КАК УслугаСтрижкиПереченьУслуг
		|ГДЕ
		|	УслугаСтрижкиПереченьНоменклатуры.Ссылка = &Ссылка
		|	И УслугаСтрижкиПереченьУслуг.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	УслугаСтрижкиПереченьНоменклатуры.Номенклатура,
		|	УслугаСтрижкиПереченьНоменклатуры.Номенклатура.ВидНоменклатуры,
		|	УслугаСтрижкиПереченьНоменклатуры.НаборСвойств,
		|	УслугаСтрижкиПереченьУслуг.Номенклатура1,
		|	УслугаСтрижкиПереченьУслуг.Номенклатура1.ВидНоменклатуры";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	#Область ДвиженияДокумента
	Запрос2 = Новый Запрос;
	Запрос2.МенеджерВременныхТаблиц = МенеджерВТ;
	Запрос2.Текст = "ВЫБРАТЬ
	                |	НоменклатураДокумента.Номенклатура КАК Номенклатура,
	                |	НоменклатураДокумента.Номенклатура1 КАК Номенклатура1,
	                |	НоменклатураДокумента.ВидНоменклатуры КАК ВидНоменклатуры,
	                |	НоменклатураДокумента.НаборСвойств КАК НаборСвойств,
	                |	НоменклатураДокумента.КоличествоВДокументе КАК КоличествоВДокументе,
	                |	НоменклатураДокумента.СуммаВДокументе КАК СуммаВДокументе,
	                |	НоменклатураДокумента.Цена1 КАК Цена1,
	                |	ЕСТЬNULL(СтоимостьМатериаловОстатки.СтоимостьОстаток, 0) КАК Стоимость,
	                |	ЕСТЬNULL(ОстаткиМатериаловОстатки.КоличествоОстаток, 0) КАК Количество
	                |ИЗ
	                |	НоменклатураДокумента КАК НоменклатураДокумента
	                |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьМатериалов.Остатки(
	                |				,
	                |				Материал В
	                |					(ВЫБРАТЬ
	                |						НоменклатураДокумента.Номенклатура
	                |					ИЗ
	                |						НоменклатураДокумента)) КАК СтоимостьМатериаловОстатки
	                |		ПО НоменклатураДокумента.Номенклатура = СтоимостьМатериаловОстатки.Материал
	                |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОстаткиМатериалов.Остатки(
	                |				,
	                |				Материал В
	                |					(ВЫБРАТЬ
	                |						НоменклатураДокумента.Номенклатура
	                |					ИЗ
	                |						НоменклатураДокумента)) КАК ОстаткиМатериаловОстатки
	                |		ПО НоменклатураДокумента.Номенклатура = ОстаткиМатериаловОстатки.Материал";
	
	
	// Установим необходимость блокировки данных в регистрах СтоимостьМатериалов
	// и ОстаткиМатериалов
	Движения.СтоимостьМатериалов.БлокироватьДляИзменения = Истина;
	Движения.ОстаткиМатериалов.БлокироватьДляИзменения = Истина;
	
	// Запишем пустые наборы записей, чтобы читать остатки без учета данных в документе
	Движения.СтоимостьМатериалов.Записать();
	Движения.ОстаткиМатериалов.Записать();
	
	РезультатЗапроса = Запрос2.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл	
		
		Если ВыборкаДетальныеЗаписи.Количество = 0 Тогда
		СтоимостьМатериала = 0;
		Иначе
		СтоимостьМатериала = ВыборкаДетальныеЗаписи.Стоимость / ВыборкаДетальныеЗаписи.Количество;

		КонецЕсли;

		Если ВыборкаДетальныеЗаписи.Номенклатура.ВидНоменклатуры = Перечисления.ВидНоменклатуры.Материал Тогда
			 
	// регистр ОстаткиМатериалов Расход
		Движение = Движения.ОстаткиМатериалов.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.Материал = ВыборкаДетальныеЗаписи.Номенклатура;
		Движение.НаборСвойств = ВыборкаДетальныеЗаписи.НаборСвойств;
		Движение.Склад = Склад;
		Движение.Количество = ВыборкаДетальныеЗаписи.КоличествоВДокументе;
	
	// регистр СтоимостьМатериалов Расход
		Движение = Движения.СтоимостьМатериалов.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.Материал = ВыборкаДетальныеЗаписи.Номенклатура;
		Движение.Стоимость = ВыборкаДетальныеЗаписи.КоличествоВДокументе * СтоимостьМатериала;
		
		//Регистр Управленческий
// Первая проводка: Д 62(ДебиторскаяЗадолженность) – К 90 (Капитал) Розничная сумма
Движение = Движения.Управленческий.Добавить();
Движение.СчетДт = ПланыСчетов.Основной.ДебиторскаяЗадолженность;
Движение.СчетКт = ПланыСчетов.Основной.Капитал;
Движение.Период = Дата;
Движение.Сумма = ВыборкаДетальныеЗаписи.СуммаВДокументе;
Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.Клиенты] = Клиент;

// Вторая проводка: Д 90 (Капитал) – К 41 (Товары) – себестоимость
Движение = Движения.Управленческий.Добавить();
ДВижение.СчетДт = ПланыСчетов.Основной.Капитал;
Движение.СчетКт = ПланыСчетов.Основной.Товары;
Движение.Период = Дата;
Движение.Сумма = СтоимостьМатериала * ВыборкаДетальныеЗаписи.КоличествоВДокументе;
Движение.Количество = ВыборкаДетальныеЗаписи.КоличествоВДокументе;
Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.Материалы] = ВыборкаДетальныеЗаписи.Номенклатура;		

	КонецЕсли;
	
	// регистр Продажи 
		Движение = Движения.Продажи.Добавить();
		Движение.Период = Дата;
		Движение.Номенклатура = ВыборкаДетальныеЗаписи.Номенклатура;
		Движение.НаборСвойств = ВыборкаДетальныеЗаписи.НаборСвойств;
		Движение.Кассир = Администратор;
		Движение.Клиент = Клиент;
		Движение.Количество = ВыборкаДетальныеЗаписи.КоличествоВДокументе;
		Движение.Выручка = ВыборкаДетальныеЗаписи.СуммаВДокументе;
		Движение.Стоимость = СтоимостьМатериала *
										ВыборкаДетальныеЗаписи.КоличествоВДокументе;
										
		// регистр Услуги
		Движение = Движения.Услуги.Добавить();
		Движение.Период = Дата;
		Движение.Номенклатура = ВыборкаДетальныеЗаписи.Номенклатура1;
		Движение.Мастер = Мастер;
		Движение.Клиент = Клиент;
		Движение.Выручка = ВыборкаДетальныеЗаписи.Цена1;								
																		
	КонецЦикла;
		Движения.Записать();
		
	#КонецОбласти
	
	
	Если Режим = РежимПроведенияДокумента.Оперативный Тогда
		
	// Проверить отрицательные остатки
	Запрос3 = Новый Запрос;
	Запрос3.МенеджерВременныхТаблиц = МенеджерВТ;
	Запрос3.Текст = "ВЫБРАТЬ
	                |	ОстаткиМатериаловОстатки.Материал КАК Материал,
	                |	ОстаткиМатериаловОстатки.КоличествоОстаток КАК КоличествоОстаток
	                |ИЗ
	                |	РегистрНакопления.ОстаткиМатериалов.Остатки(
	                |			,
	                |			Материал В
	                |					(ВЫБРАТЬ
	                |						НоменклатураДокумента.Номенклатура
	                |					ИЗ
	                |						НоменклатураДокумента)
	                |				И Склад = &Склад) КАК ОстаткиМатериаловОстатки
	                |ГДЕ
	                |	ОстаткиМатериаловОстатки.КоличествоОстаток < 0";

Запрос3.УстановитьПараметр("Склад", Склад);

РезультатЗапроса = Запрос3.Выполнить();
ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();

Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	Сообщение = Новый СообщениеПользователю();
	Сообщение.Текст = "Не хватает " + Строка(- ВыборкаДетальныеЗаписи.КоличествоОстаток) +
				 " единиц материала """ + ВыборкаДетальныеЗаписи.Материал + """";
	Сообщение.Сообщить();
	
	Отказ = Истина;
	КонецЦикла;

	
	
	КонецЕсли;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
КонецПроцедуры

Процедура ПриУстановкеНовогоНомера(СтандартнаяОбработка, Префикс)
	
Префикс = Обмен.ПолучитьПрефиксНомера();

КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	//{{__КОНСТРУКТОР_ВВОД_НА_ОСНОВАНИИ
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	Если ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.Клиенты") Тогда
		// Заполнение шапки
		Клиент = ДанныеЗаполнения.Ссылка;
	КонецЕсли;
	//}}__КОНСТРУКТОР_ВВОД_НА_ОСНОВАНИИ
КонецПроцедуры
